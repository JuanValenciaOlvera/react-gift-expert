{"version":3,"sources":["components/AddCategory.js","components/GiftGridItem.js","helpers/getGifts.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GiftGridItem","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","resp","json","data","gifts","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","console","log","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,uBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMlB,UACI,6BAAKD,IACL,uBACIQ,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,c,QCLlBG,EAAe,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAEhC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,kCAAMA,EAAN,W,uBCPCK,EAAQ,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEdN,EAFc,iDAEkCO,UAAWF,GAF7C,+DAIDG,MAAOR,GAJN,cAIdS,EAJc,gBAKCA,EAAKC,OALN,uBAKbC,EALa,EAKbA,KAEDC,EAASD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAXtB,kBAcbY,GAda,4CAAH,sDCIRM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EAEdpB,mBAAS,CAC/B0B,KAAK,GACLQ,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAkBxC,OAZAC,qBAAU,WAENlB,EAAUC,GACTkB,MAAK,SAAAT,GACFO,EAAS,CACLV,KAAKG,EACLK,SAAQ,SAIjB,CAAEd,IAEEe,EDfwBI,CAAanB,GAAhCW,EAFuB,EAE5BL,KAAaQ,EAFe,EAEfA,QAMpB,OALAM,QAAQC,IAAIP,GAMR,qCACA,6BAAKd,IAEHc,GAAW,wCAEb,qBAAKlB,UAAU,YAAf,SAEQe,EAAOH,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEKA,GADAA,EAAIC,aEOdY,EA1Ba,WAAM,MAIM1C,mBAAS,CAAC,kBAJhB,mBAIvB2C,EAJuB,KAIX5C,EAJW,KAO9B,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ4C,EAAWf,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAWA,GADNA,Y,MCd7BwB,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f617959c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChance = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue,...cats ]);\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit= {handleSubmit}>  \r\n            <h1>{inputValue}</h1>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange= {handleInputChance}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react';\r\n\r\n\r\nexport const GiftGridItem = ({title,url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifts = async ( category ) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI (category)}&api_key=B7PZT49OcIQBDZmjzNqxhyBIb62B1sOT&limit=10`;\r\n\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifts =  data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifts;\r\n}","// import React,{useEffect, useState} from 'react'\r\nimport { GiftGridItem } from './GiftGridItem';\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    console.log(loading);\r\n\r\n    \r\n\r\n    \r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        \r\n        { loading && <p>Loading</p>}\r\n        \r\n        <div className=\"card-grid\">  \r\n            {\r\n                images.map(img => (\r\n                    <GiftGridItem\r\n                    key={img.id}\r\n                    { ...img }\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifts} from '../helpers/getGifts'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n        \r\n        getGifts( category )\r\n        .then(img => {\r\n            setstate({\r\n                data:img,\r\n                loading:false\r\n            })\r\n        })\r\n\r\n    }, [ category ]);\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One punch' , 'Samurai x' , 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['HunterxHunter']);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr></hr>\r\n            <ol>\r\n                {\r\n                    categories.map(category  => \r\n                        <GifGrid \r\n                        key={category}\r\n                        category={ category} />\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}